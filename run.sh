#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ CluelyPro

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}=====================================${NC}"
echo -e "${BLUE}   CluelyPro - –ì–æ–ª–æ—Å–æ–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç    ${NC}"
echo -e "${BLUE}=====================================${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo -e "${RED}‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    echo -e "${YELLOW}–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example:${NC}"
    echo -e "   cp .env.example .env"
    echo -e "   # –ó–∞—Ç–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env –∏ –¥–æ–±–∞–≤—å—Ç–µ GEMINI_API_KEY"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ GEMINI_API_KEY
if ! grep -q "GEMINI_API_KEY=.*[a-zA-Z0-9]" .env; then
    echo -e "${RED}‚ùå GEMINI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ .env —Ñ–∞–π–ª–µ!${NC}"
    echo -e "${YELLOW}–î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –≤ .env:${NC}"
    echo -e "   GEMINI_API_KEY=your_key_here"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -d ".venv" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
    echo -e "${BLUE}–°–æ–∑–¥–∞—é .venv...${NC}"
    python3 -m venv .venv
    echo -e "${GREEN}‚úì –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ${NC}"
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "${BLUE}–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
source .venv/bin/activate

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if ! python -c "import faster_whisper" 2>/dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    echo -e "${BLUE}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    pip install -q -r requirements.txt
    echo -e "${GREEN}‚úì –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫
mkdir -p profiles logs

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
MODE="${1:-default}"

case "$MODE" in
    "test")
        echo -e "${BLUE}üß™ –ó–∞–ø—É—Å–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ (10 —Å–µ–∫—É–Ω–¥, tiny –º–æ–¥–µ–ª—å)${NC}"
        echo ""
        RUN_SECONDS=10 ASR_MODEL=tiny python main.py
        ;;
    "fast")
        echo -e "${BLUE}‚ö° –ó–∞–ø—É—Å–∫ –≤ –±—ã—Å—Ç—Ä–æ–º —Ä–µ–∂–∏–º–µ (–º–æ–¥–µ–ª—å base)${NC}"
        echo ""
        ASR_MODEL=base python main.py
        ;;
    "quality")
        echo -e "${BLUE}üéØ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –∫–∞—á–µ—Å—Ç–≤–∞ (–º–æ–¥–µ–ª—å large-v3-turbo)${NC}"
        echo ""
        ASR_MODEL=large-v3-turbo python main.py
        ;;
    "help"|"-h"|"--help")
        echo -e "${GREEN}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${NC}"
        echo -e "  ./run.sh [—Ä–µ–∂–∏–º]"
        echo ""
        echo -e "${GREEN}–†–µ–∂–∏–º—ã:${NC}"
        echo -e "  ${BLUE}default${NC}  - –û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫ (–º–æ–¥–µ–ª—å small)"
        echo -e "  ${BLUE}test${NC}     - –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (10 —Å–µ–∫, –º–æ–¥–µ–ª—å tiny)"
        echo -e "  ${BLUE}fast${NC}     - –ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º (–º–æ–¥–µ–ª—å base)"
        echo -e "  ${BLUE}quality${NC}  - –†–µ–∂–∏–º –∫–∞—á–µ—Å—Ç–≤–∞ (–º–æ–¥–µ–ª—å large-v3-turbo)"
        echo -e "  ${BLUE}help${NC}     - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo ""
        echo -e "${GREEN}–ü—Ä–∏–º–µ—Ä—ã:${NC}"
        echo -e "  ./run.sh              # –û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫"
        echo -e "  ./run.sh test         # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç"
        echo -e "  ./run.sh quality      # –õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ ASR"
        exit 0
        ;;
    "default"|*)
        echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ (–º–æ–¥–µ–ª—å small)${NC}"
        echo ""
        python main.py
        ;;
esac

echo ""
echo -e "${GREEN}‚úì –ó–∞–≤–µ—Ä—à–µ–Ω–æ${NC}"
