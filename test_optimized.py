#!/usr/bin/env python3
"""–¢–µ—Å—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã"""

import sys
import time
from pathlib import Path
from live_recognizer import extract_theses_from_text

def test_thesis_extraction():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∑–∏—Å–æ–≤"""
    test_cases = [
        "–í –∫–∞–∫–æ–º –≥–æ–¥—É –Ω–∞—á–∞–ª–∞—Å—å –í—Ç–æ—Ä–∞—è –º–∏—Ä–æ–≤–∞—è –≤–æ–π–Ω–∞?",
        "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª TCP?",
        "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?",
        "–ü–æ—á–µ–º—É –∂–µ–ª–µ–∑–æ —Ä–∂–∞–≤–µ–µ—Ç?",
    ]
    
    print("="*50)
    print("–¢–ï–°–¢ –ò–ó–í–õ–ï–ß–ï–ù–ò–Ø –¢–ï–ó–ò–°–û–í")
    print("="*50)
    
    for i, text in enumerate(test_cases, 1):
        print(f"\n–¢–µ—Å—Ç {i}: {text}")
        start = time.time()
        theses = extract_theses_from_text(text)
        elapsed = time.time() - start
        
        if theses:
            print(f"–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {elapsed:.2f} —Å–µ–∫")
            for j, t in enumerate(theses, 1):
                print(f"  {j}. {t}")
        else:
            print(f"–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {elapsed:.2f} —Å–µ–∫")
            print("  (–Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–µ–∑–∏—Å–æ–≤)")
    
    print("\n" + "="*50)
    print("–¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print("="*50)

def test_tts_speed():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å TTS"""
    try:
        from tts_silero import SileroTTS
        
        print("\n" + "="*50)
        print("–¢–ï–°–¢ –°–ö–û–†–û–°–¢–ò TTS")
        print("="*50)
        
        tts = SileroTTS()
        texts = [
            "–¢–µ–∑–∏—Å –Ω–æ–º–µ—Ä –æ–¥–∏–Ω",
            "–í—Ç–æ—Ä–æ–π —Ç–µ–∑–∏—Å –æ—Ç–≤–µ—Ç–∞",
            "–¢—Ä–µ—Ç–∏–π –∏ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∑–∏—Å",
        ]
        
        for text in texts:
            start = time.time()
            audio = tts.synth(text)
            elapsed = time.time() - start
            duration = len(audio) / tts.sample_rate if len(audio) > 0 else 0
            print(f"'{text}': —Å–∏–Ω—Ç–µ–∑ {elapsed:.3f}—Å, –¥–ª–∏–Ω–∞ {duration:.2f}—Å")
        
        print("="*50)
    except Exception as e:
        print(f"TTS —Ç–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω: {e}")

if __name__ == "__main__":
    print("\nüöÄ –ó–ê–ü–£–°–ö–ê–ï–ú –¢–ï–°–¢–´ –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–û–ô –°–ò–°–¢–ï–ú–´\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∑–∏—Å–æ–≤
    test_thesis_extraction()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å TTS
    test_tts_speed()
    
    print("\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´")
