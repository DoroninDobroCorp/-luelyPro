#!/usr/bin/env python3
"""
–ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∞—É–¥–∏–æ –û–î–ò–ù –†–ê–ó –¥–ª—è –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤.
–ü–æ—Ç–æ–º –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –∞–≤—Ç–æ—Ç–µ—Å—Ç—ã –±–µ–∑ —É—á–∞—Å—Ç–∏—è.
"""
import sys
import time
import numpy as np
import soundfile as sf
from pathlib import Path
from loguru import logger

logger.remove()
logger.add(sys.stderr, level="INFO", format="<green>{time:HH:mm:ss}</green> | <level>{level:8}</level> | {message}")

# –ü–∞–ø–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–µ–π
AUDIO_DIR = Path("test_audio")
AUDIO_DIR.mkdir(exist_ok=True)

logger.info("=" * 80)
logger.info("–ó–ê–ü–ò–°–¨ –¢–ï–°–¢–û–í–û–ì–û –ê–£–î–ò–û")
logger.info("=" * 80)
logger.info("")
logger.info("–°–µ–π—á–∞—Å –∑–∞–ø–∏—à–µ–º 3 —Ñ–∞–π–ª–∞ –¥–ª—è –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤:")
logger.info("  1. question.wav - –≤–æ–ø—Ä–æ—Å –æ—Ç —ç–∫–∑–∞–º–µ–Ω–∞—Ç–æ—Ä–∞ (–º–æ–∂–µ—à—å –≤–∫–ª—é—á–∏—Ç—å –≤–∏–¥–µ–æ)")
logger.info("  2. answer.wav - —Ç–≤–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∑–∏—Å")
logger.info("  3. question2.wav - –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –Ω–µ –≥–ª–æ—Ö–Ω–µ—Ç)")
logger.info("")
logger.info("–≠—Ç–∏ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞—Ö!")
logger.info("")

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω
try:
    import sounddevice as sd
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω
    devices = sd.query_devices()
    default_input = sd.query_devices(kind='input')
    logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω: {default_input['name']}")
    
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞: {e}")
    sys.exit(1)

SAMPLE_RATE = 16000

def record_audio(duration: int, filename: str) -> np.ndarray:
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∞—É–¥–∏–æ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞"""
    logger.info(f"üéôÔ∏è  –ó–ê–ü–ò–°–¨ {duration} —Å–µ–∫—É–Ω–¥...")
    logger.info("   –ì–æ–≤–æ—Ä–∏—Ç–µ –°–ï–ô–ß–ê–°!")
    
    # –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç
    for i in range(duration, 0, -1):
        if i <= 3:
            logger.info(f"   ...{i}")
        time.sleep(1)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º
    try:
        audio = sd.rec(
            int(duration * SAMPLE_RATE),
            samplerate=SAMPLE_RATE,
            channels=1,
            dtype='float32'
        )
        sd.wait()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        path = AUDIO_DIR / filename
        sf.write(path, audio, SAMPLE_RATE)
        
        logger.success(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {path}")
        logger.info(f"   –î–ª–∏–Ω–∞: {len(audio)/SAMPLE_RATE:.1f}—Å")
        logger.info("")
        
        return audio
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏: {e}")
        return None

# ========== –ó–ê–ü–ò–°–¨ 1: –í–û–ü–†–û–° ==========
logger.info("=" * 80)
logger.info("–ó–ê–ü–ò–°–¨ 1: –í–û–ü–†–û–° –û–¢ –≠–ö–ó–ê–ú–ï–ù–ê–¢–û–†–ê")
logger.info("=" * 80)
logger.info("")
logger.info("–í–∫–ª—é—á–∏ –≤–∏–¥–µ–æ —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏–ª–∏ —Å–∞–º –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –¥—Ä—É–≥–∏–º –≥–æ–ª–æ—Å–æ–º.")
logger.info("–ù–∞–ø—Ä–∏–º–µ—Ä: '–ö–æ–≥–¥–∞ –æ—Ç–º–µ–Ω–∏–ª–∏ —Ä–∞–±—Å—Ç–≤–æ –≤ –°–®–ê?'")
logger.info("")
input("–ù–∞–∂–º–∏ Enter –∫–æ–≥–¥–∞ –≥–æ—Ç–æ–≤... ")

record_audio(5, "question.wav")

# ========== –ó–ê–ü–ò–°–¨ 2: –¢–í–û–ô –û–¢–í–ï–¢ ==========
logger.info("=" * 80)
logger.info("–ó–ê–ü–ò–°–¨ 2: –¢–í–û–ô –û–¢–í–ï–¢")
logger.info("=" * 80)
logger.info("")
logger.info("–°–∫–∞–∂–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –°–í–û–ò–ú –≥–æ–ª–æ—Å–æ–º.")
logger.info("–ù–∞–ø—Ä–∏–º–µ—Ä: '–í —Ç—ã—Å—è—á–∞ –≤–æ—Å–µ–º—å—Å–æ—Ç —à–µ—Å—Ç—å–¥–µ—Å—è—Ç –ø—è—Ç–æ–º –≥–æ–¥—É'")
logger.info("–ò–ª–∏: '–í 1865 –≥–æ–¥—É'")
logger.info("")
input("–ù–∞–∂–º–∏ Enter –∫–æ–≥–¥–∞ –≥–æ—Ç–æ–≤... ")

record_audio(5, "answer.wav")

# ========== –ó–ê–ü–ò–°–¨ 3: –í–¢–û–†–û–ô –í–û–ü–†–û–° ==========
logger.info("=" * 80)
logger.info("–ó–ê–ü–ò–°–¨ 3: –í–¢–û–†–û–ô –í–û–ü–†–û–°")
logger.info("=" * 80)
logger.info("")
logger.info("–ï—â—ë –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–ª–æ—Ö–Ω–µ—Ç).")
logger.info("–ù–∞–ø—Ä–∏–º–µ—Ä: '–ö—Ç–æ –±—ã–ª –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –°–®–ê –≤–æ –≤—Ä–µ–º—è –æ—Ç–º–µ–Ω—ã —Ä–∞–±—Å—Ç–≤–∞?'")
logger.info("")
input("–ù–∞–∂–º–∏ Enter –∫–æ–≥–¥–∞ –≥–æ—Ç–æ–≤... ")

record_audio(5, "question2.wav")

# ========== –ò–¢–û–ì–ò ==========
logger.info("")
logger.info("=" * 80)
logger.info("‚úÖ –í–°–ï –ó–ê–ü–ò–°–ò –ì–û–¢–û–í–´!")
logger.info("=" * 80)
logger.info("")
logger.info(f"–§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {AUDIO_DIR}/")
logger.info("")

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∑–∞–ø–∏—Å–∞–ª–∏
for f in ["question.wav", "answer.wav", "question2.wav"]:
    path = AUDIO_DIR / f
    if path.exists():
        info = sf.info(path)
        logger.info(f"  ‚úÖ {f}: {info.duration:.1f}—Å, {info.samplerate}Hz")
    else:
        logger.warning(f"  ‚ö†Ô∏è  {f}: –Ω–µ –Ω–∞–π–¥–µ–Ω")

logger.info("")
logger.success("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å: .venv/bin/python test_with_real_audio.py")
logger.success("–ê–≤—Ç–æ—Ç–µ—Å—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –∑–∞–ø–∏—Å–∏!")
